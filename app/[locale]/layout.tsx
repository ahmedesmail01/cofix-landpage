import { Roboto } from "next/font/google";
import "./globals.css";
import NavBar from "./components/NavBar";
import Footer from "./components/home/Footer";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import localFont from "next/font/local";

// Define supported locales type from routing configuration
type SupportedLocale = (typeof routing.locales)[number];

// Define props interface for the layout component
interface LocaleLayoutProps {
  children: React.ReactNode;
  params: {
    locale: string;
  };
}

// Load Roboto font for English
const roboto = Roboto({
  variable: "--font-roboto",
  subsets: ["latin"],
  weight: ["400", "500", "700"], // Adjust weights as needed
});

// Load PNU font for Arabic (local font)
const pnu = localFont({
  src: [
    {
      path: "../../public/fonts/ArbFONTS-PNU-Regular.ttf",
      weight: "400",
      style: "normal",
    },
    {
      path: "../../public/fonts/ArbFONTS-PNU-Regular.ttf",
      weight: "700",
      style: "normal",
    },
  ],
  variable: "--font-pnu",
});

// Move metadata to a server-side context
export const metadata = {
  title: "Corporate Fix",
  description: "Generated by Roma Dev Team",
};

export default async function LocaleLayout({
  children,
  params: { locale },
}: LocaleLayoutProps) {
  // Ensure that the incoming `locale` is valid
  if (!routing.locales.includes(locale as SupportedLocale)) {
    notFound();
  }

  // Type for messages
  type Messages = Awaited<ReturnType<typeof getMessages>>;

  // Providing all messages to the client
  const messages: Messages = await getMessages();

  return (
    <html dir={locale === "ar" ? "rtl" : "ltr"} lang={locale}>
      <body
        className={`antialiased bg-[#f5f5f7] ${
          locale === "ar" ? pnu.className : roboto.variable
        }`}
      >
        <NextIntlClientProvider messages={messages}>
          <NavBar />
          {children}
          <Footer />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
